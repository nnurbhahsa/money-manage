{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","className","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","Transaction","sign","text","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0f79a37.chunk.js","sourcesContent":["import React from \"react\";\n\n// function components with hooks\nexport const Header = () => {\n  return <h2 className=\"borderChange\">MONEY MANAGER</h2>;\n};\n","// AppReducer: how we speficy application state changes in response to certain actions to our store/context\n\nexport default (state, action) => {\n  switch (action.type) {\n    case \"DELETE_TRANSACTION\":\n      // REDUCER is way to change state and send it down to component\n      // done by creating a new state and sending that down\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id !== action.payload\n        ),\n      };\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n        // SPREAD takes out all values from array and puts them (below)\n        transactions: [action.payload, ...state.transactions],\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\n// initial state\nconst initialState = {\n  transactions: [],\n};\n\n// create context\nexport const GlobalContext = createContext(initialState);\n\n// provider component to wrap all other components, which become its children\nexport const GlobalProvider = ({ children }) => {\n  // use dispatch with reducer action\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // ACTIONS that will make calls to reducer for GlobalState\n  function deleteTransaction(id) {\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      // any data we want to send to it\n      payload: id,\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: \"ADD_TRANSACTION\",\n      // any data we want to send to it\n      payload: transaction,\n    });\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        // can access anything in initialState object by\n        transactions: state.transactions,\n        // can access transactions from any component requested from using useContext (another react hook)\n        deleteTransaction,\n        addTransaction,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  return (\n    <>\n      <h4 className=\"colorChange\">Your Balance</h4>\n      <h1>${total}</h1>\n    </>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n\n  const income = amounts\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n  return (\n    <div className=\"inc-exp-container\">\n      <div>\n        <h4>Income</h4>\n        <p className=\"money plus\">{income}</p>\n      </div>\n      <div>\n        <h4>Expense</h4>\n        <p className=\"money minus\">{expense}</p>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\n\n  return (\n    // making class dynamic\n    <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\n      {transaction.text}\n      <span>\n        {sign}${Math.abs(transaction.amount)}\n      </span>\n      <button\n        onClick={() => deleteTransaction(transaction.id)}\n        className=\"delete-btn\"\n      >\n        x\n      </button>\n    </li>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Transaction } from \"./Transaction\";\n\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const TransactionList = () => {\n  // can pull out anything from GlobalContext using useContext hooks\n  // const context = useContext(GlobalContext);\n  // destructuring\n  const { transactions } = useContext(GlobalContext);\n\n  return (\n    <>\n      <h3>History</h3>\n      <ul id=\"list\" className=\"list\">\n        {/* <li className=\"minus\">\n          Cash <span>-$400</span>\n          <button className=\"delete-btn\">x</button>\n        </li> */}\n        {/* vs.  */}\n        {transactions.map((transaction) => (\n          <Transaction key={transaction.id} transaction={transaction} />\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const AddTransaction = () => {\n  // form needs component level state b/c of its inputs => HOOK\n  //   1) create piece of state\n  //   2) create funciton to manipulate that piece of state\n  //   3) i.e. default goes in useState('')\n  //   4) connect to inputs\n  //   5) input needs value and\n  //   6) onChange event b/c when it is changed, it needs to update that piece of state\n  //       call a function, then call i.e. setText and pass in what we want to set it to, which is what we are typing\n  //         => event parameter\n\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(\"0\");\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      text,\n      amount: +amount,\n    };\n\n    addTransaction(newTransaction);\n  };\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n\n          <input\n            type=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Enter text...\"\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            type=\"number\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            placeholder=\"Enter amount...\"\n          />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Header } from \"./components/Header\";\nimport { Balance } from \"./components/Balance\";\nimport { IncomeExpenses } from \"./components/IncomeExpenses\";\nimport { TransactionList } from \"./components/TransactionList\";\nimport { AddTransaction } from \"./components/AddTransaction\";\n\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}